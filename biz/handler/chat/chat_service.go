// Code generated by hertz generator.

package chat

import (
	"context"
	"github.com/cmz2012/AITalk/biz/service"

	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
	chat "github.com/cmz2012/AITalk/biz/model/chat"
)

// CreateChat .
// @router /chat [GET]
func CreateChat(ctx context.Context, c *app.RequestContext) {
	var err error
	var req chat.CreateChatReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	// upgrade to websocket
	service.ChatUpgrade(ctx, c)

}

// GetSessionList .
// @router /session [GET]
func GetSessionList(ctx context.Context, c *app.RequestContext) {
	var err error
	var req chat.GetSessionListReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(chat.GetSessionListResp)

	c.JSON(consts.StatusOK, resp)
}

// GetSessionMsg .
// @router /message [GET]
func GetSessionMsg(ctx context.Context, c *app.RequestContext) {
	var err error
	var req chat.GetSessionMsgReq
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(chat.GetSessionMsgResp)

	c.JSON(consts.StatusOK, resp)
}
